server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh  #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001  #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/get/**  #断言，路径相匹配的进行路由


        - id: payment_routh2
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/lb/** #请求路径匹配
#            - After=2020-08-21T10:30:00.485+08:00[Asia/Shanghai] #在某个时间点之后有效
#            - Before=2020-08-21T10:30:00.485+08:00[Asia/Shanghai] #在某个时间点之前有效
#            - Between=2020-08-21T10:30:00.485+08:00[Asia/Shanghai],2020-08-22T10:30:00.485+08:00[Asia/Shanghai] #在某个时间段之内有效
#            - Cookie=username,zz #带什么样的cookie才允许访问，两个参数，属性名和正则表达式
#            - Header=X-Request-Id,\d+ #请求头匹配
#            - Host=**.abc.com #匹配主机地址
#            - Method=GET #请求方法匹配
#            - Query=username,\d+ #参数匹配
#          filters:
#            - AddRequestParameter=XRequestId,1024 #过滤器匹配请求头
eureka:
  client:
    #表示是否将自己注册进EurekaServer，默认为true
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认true。单点无所谓，集群必须设置为true才能配合Ribbon使用负载均衡
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:7001/eureka/
#      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
  instance:
    instance-id: gateway9527
    prefer-ip-address: true #访问路径可以显示IP地址
    #Eureka客户端向服务端发送心跳的时间间隔，单位为秒（默认是30秒）
    lease-renewal-interval-in-seconds: 1
    #Eureka服务端在收到最后一次心跳后等待时间上线，单位为秒（默认是90秒），超时将剔除服务
    lease-expiration-duration-in-seconds: 2
    hostname: cloud-gateway-service